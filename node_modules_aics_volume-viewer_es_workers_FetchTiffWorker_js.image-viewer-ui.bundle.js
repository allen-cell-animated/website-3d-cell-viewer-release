/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "?cdec":
/*!**********************!*\
  !*** http (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?753a":
/*!***********************!*\
  !*** https (ignored) ***!
  \***********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?4e4d":
/*!*********************!*\
  !*** url (ignored) ***!
  \*********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?662e":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var geotiff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! geotiff */ \"./node_modules/geotiff/dist-module/geotiff.js\");\n\n\n\n// from TIFF\nvar SAMPLEFORMAT_UINT = 1;\nvar SAMPLEFORMAT_INT = 2;\nvar SAMPLEFORMAT_IEEEFP = 3;\nfunction castToArray(buf, bytesPerPixel, sampleFormat) {\n  if (sampleFormat === SAMPLEFORMAT_IEEEFP) {\n    if (bytesPerPixel === 4) {\n      return new Float32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_INT) {\n    if (bytesPerPixel === 1) {\n      return new Int8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Int16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Int32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_UINT) {\n    if (bytesPerPixel === 1) {\n      return new Uint8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Uint16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Uint32Array(buf);\n    }\n  }\n  console.error(\"TIFF Worker: unsupported sample format \".concat(sampleFormat, \" and bytes per pixel \").concat(bytesPerPixel));\n  return new Uint8Array(buf);\n}\nself.onmessage = /*#__PURE__*/function () {\n  var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__.mark(function _callee(e) {\n    var channelIndex, tilesizex, tilesizey, sizez, sizec, dimensionOrder, bytesPerSample, tiff, startindex, incrementz, image, sampleFormat, bytesPerPixel, buffer, u8, imageIndex, zslice, _image, result, arrayresult, offset, src, chmin, chmax, j, val, out, _j, results;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          // TODO index images by time\n          // const time = e.data.time;\n          channelIndex = e.data.channel;\n          tilesizex = e.data.tilesizex;\n          tilesizey = e.data.tilesizey;\n          sizez = e.data.sizez;\n          sizec = e.data.sizec;\n          dimensionOrder = e.data.dimensionOrder;\n          bytesPerSample = e.data.bytesPerSample;\n          _context.next = 9;\n          return (0,geotiff__WEBPACK_IMPORTED_MODULE_2__.fromUrl)(e.data.url, {\n            allowFullFile: true\n          });\n        case 9:\n          tiff = _context.sent;\n          // load the images of this channel from the tiff\n          // today assume TCZYX so the slices are already in order.\n          startindex = 0;\n          incrementz = 1;\n          if (dimensionOrder === \"XYZCT\") {\n            // we have XYZCT which is the \"good\" case\n            // TCZYX\n            startindex = sizez * channelIndex;\n            incrementz = 1;\n          } else if (dimensionOrder === \"XYCZT\") {\n            // we have to loop differently to increment channels\n            // TZCYX\n            startindex = channelIndex;\n            incrementz = sizec;\n          }\n\n          // huge assumption: planes are in a particular order relative to z and c\n\n          // get first plane, to get some details about the image\n          _context.next = 15;\n          return tiff.getImage(startindex);\n        case 15:\n          image = _context.sent;\n          // on first image, set up some stuff:\n          sampleFormat = image.getSampleFormat();\n          bytesPerPixel = image.getBytesPerPixel(); // allocate a buffer for one channel\n          buffer = new ArrayBuffer(tilesizex * tilesizey * sizez * bytesPerPixel);\n          u8 = new Uint8Array(buffer);\n          imageIndex = startindex, zslice = 0;\n        case 21:\n          if (!(zslice < sizez)) {\n            _context.next = 34;\n            break;\n          }\n          _context.next = 24;\n          return tiff.getImage(imageIndex);\n        case 24:\n          _image = _context.sent;\n          _context.next = 27;\n          return _image.readRasters({\n            width: tilesizex,\n            height: tilesizey\n          });\n        case 27:\n          result = _context.sent;\n          arrayresult = Array.isArray(result) ? result[0] : result; // deposit in full channel array in the right place\n          offset = zslice * tilesizex * tilesizey;\n          if (arrayresult.BYTES_PER_ELEMENT > 4) {\n            console.log(\"byte size not supported yet\");\n          } else if (arrayresult.BYTES_PER_ELEMENT !== bytesPerSample) {\n            console.log(\"tiff bytes per element mismatch with OME metadata\");\n          } else {\n            u8.set(new Uint8Array(arrayresult.buffer), offset * arrayresult.BYTES_PER_ELEMENT);\n          }\n        case 31:\n          imageIndex += incrementz, ++zslice;\n          _context.next = 21;\n          break;\n        case 34:\n          // all slices collected, now resample to 8 bits full data range\n          src = castToArray(buffer, bytesPerPixel, sampleFormat);\n          chmin = src[0];\n          chmax = src[0];\n          for (j = 0; j < src.length; ++j) {\n            val = src[j];\n            if (val < chmin) {\n              chmin = val;\n            }\n            if (val > chmax) {\n              chmax = val;\n            }\n          }\n          out = new Uint8Array(src.length);\n          for (_j = 0; _j < src.length; ++_j) {\n            out[_j] = (src[_j] - chmin) / (chmax - chmin) * 255;\n          }\n          results = {\n            data: out,\n            channel: channelIndex,\n            range: [chmin, chmax]\n          };\n          self.postMessage(results, [results.data.buffer]);\n        case 42:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFpY3Mvdm9sdW1lLXZpZXdlci9lcy93b3JrZXJzL0ZldGNoVGlmZldvcmtlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQXdFO0FBQ1g7QUFDM0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtRkFBaUIsZUFBZSw0REFBd0I7QUFDckU7QUFDQSxXQUFXLDREQUF3QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQU87QUFDeEI7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQkFBaUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGFpY3Mvd2ViLTNkLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYWljcy92b2x1bWUtdmlld2VyL2VzL3dvcmtlcnMvRmV0Y2hUaWZmV29ya2VyLmpzPzM3YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3JcIjtcbmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gXCJAYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvclwiO1xuaW1wb3J0IHsgZnJvbVVybCB9IGZyb20gXCJnZW90aWZmXCI7XG4vLyBmcm9tIFRJRkZcbnZhciBTQU1QTEVGT1JNQVRfVUlOVCA9IDE7XG52YXIgU0FNUExFRk9STUFUX0lOVCA9IDI7XG52YXIgU0FNUExFRk9STUFUX0lFRUVGUCA9IDM7XG5mdW5jdGlvbiBjYXN0VG9BcnJheShidWYsIGJ5dGVzUGVyUGl4ZWwsIHNhbXBsZUZvcm1hdCkge1xuICBpZiAoc2FtcGxlRm9ybWF0ID09PSBTQU1QTEVGT1JNQVRfSUVFRUZQKSB7XG4gICAgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDQpIHtcbiAgICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KGJ1Zik7XG4gICAgfVxuICB9IGVsc2UgaWYgKHNhbXBsZUZvcm1hdCA9PT0gU0FNUExFRk9STUFUX0lOVCkge1xuICAgIGlmIChieXRlc1BlclBpeGVsID09PSAxKSB7XG4gICAgICByZXR1cm4gbmV3IEludDhBcnJheShidWYpO1xuICAgIH0gZWxzZSBpZiAoYnl0ZXNQZXJQaXhlbCA9PT0gMikge1xuICAgICAgcmV0dXJuIG5ldyBJbnQxNkFycmF5KGJ1Zik7XG4gICAgfSBlbHNlIGlmIChieXRlc1BlclBpeGVsID09PSA0KSB7XG4gICAgICByZXR1cm4gbmV3IEludDMyQXJyYXkoYnVmKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoc2FtcGxlRm9ybWF0ID09PSBTQU1QTEVGT1JNQVRfVUlOVCkge1xuICAgIGlmIChieXRlc1BlclBpeGVsID09PSAxKSB7XG4gICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmKTtcbiAgICB9IGVsc2UgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDIpIHtcbiAgICAgIHJldHVybiBuZXcgVWludDE2QXJyYXkoYnVmKTtcbiAgICB9IGVsc2UgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDQpIHtcbiAgICAgIHJldHVybiBuZXcgVWludDMyQXJyYXkoYnVmKTtcbiAgICB9XG4gIH1cbiAgY29uc29sZS5lcnJvcihcIlRJRkYgV29ya2VyOiB1bnN1cHBvcnRlZCBzYW1wbGUgZm9ybWF0IFwiLmNvbmNhdChzYW1wbGVGb3JtYXQsIFwiIGFuZCBieXRlcyBwZXIgcGl4ZWwgXCIpLmNvbmNhdChieXRlc1BlclBpeGVsKSk7XG4gIHJldHVybiBuZXcgVWludDhBcnJheShidWYpO1xufVxuc2VsZi5vbm1lc3NhZ2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZSkge1xuICAgIHZhciBjaGFubmVsSW5kZXgsIHRpbGVzaXpleCwgdGlsZXNpemV5LCBzaXpleiwgc2l6ZWMsIGRpbWVuc2lvbk9yZGVyLCBieXRlc1BlclNhbXBsZSwgdGlmZiwgc3RhcnRpbmRleCwgaW5jcmVtZW50eiwgaW1hZ2UsIHNhbXBsZUZvcm1hdCwgYnl0ZXNQZXJQaXhlbCwgYnVmZmVyLCB1OCwgaW1hZ2VJbmRleCwgenNsaWNlLCBfaW1hZ2UsIHJlc3VsdCwgYXJyYXlyZXN1bHQsIG9mZnNldCwgc3JjLCBjaG1pbiwgY2htYXgsIGosIHZhbCwgb3V0LCBfaiwgcmVzdWx0cztcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgLy8gVE9ETyBpbmRleCBpbWFnZXMgYnkgdGltZVxuICAgICAgICAgIC8vIGNvbnN0IHRpbWUgPSBlLmRhdGEudGltZTtcbiAgICAgICAgICBjaGFubmVsSW5kZXggPSBlLmRhdGEuY2hhbm5lbDtcbiAgICAgICAgICB0aWxlc2l6ZXggPSBlLmRhdGEudGlsZXNpemV4O1xuICAgICAgICAgIHRpbGVzaXpleSA9IGUuZGF0YS50aWxlc2l6ZXk7XG4gICAgICAgICAgc2l6ZXogPSBlLmRhdGEuc2l6ZXo7XG4gICAgICAgICAgc2l6ZWMgPSBlLmRhdGEuc2l6ZWM7XG4gICAgICAgICAgZGltZW5zaW9uT3JkZXIgPSBlLmRhdGEuZGltZW5zaW9uT3JkZXI7XG4gICAgICAgICAgYnl0ZXNQZXJTYW1wbGUgPSBlLmRhdGEuYnl0ZXNQZXJTYW1wbGU7XG4gICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7XG4gICAgICAgICAgcmV0dXJuIGZyb21VcmwoZS5kYXRhLnVybCwge1xuICAgICAgICAgICAgYWxsb3dGdWxsRmlsZTogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgdGlmZiA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgLy8gbG9hZCB0aGUgaW1hZ2VzIG9mIHRoaXMgY2hhbm5lbCBmcm9tIHRoZSB0aWZmXG4gICAgICAgICAgLy8gdG9kYXkgYXNzdW1lIFRDWllYIHNvIHRoZSBzbGljZXMgYXJlIGFscmVhZHkgaW4gb3JkZXIuXG4gICAgICAgICAgc3RhcnRpbmRleCA9IDA7XG4gICAgICAgICAgaW5jcmVtZW50eiA9IDE7XG4gICAgICAgICAgaWYgKGRpbWVuc2lvbk9yZGVyID09PSBcIlhZWkNUXCIpIHtcbiAgICAgICAgICAgIC8vIHdlIGhhdmUgWFlaQ1Qgd2hpY2ggaXMgdGhlIFwiZ29vZFwiIGNhc2VcbiAgICAgICAgICAgIC8vIFRDWllYXG4gICAgICAgICAgICBzdGFydGluZGV4ID0gc2l6ZXogKiBjaGFubmVsSW5kZXg7XG4gICAgICAgICAgICBpbmNyZW1lbnR6ID0gMTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGRpbWVuc2lvbk9yZGVyID09PSBcIlhZQ1pUXCIpIHtcbiAgICAgICAgICAgIC8vIHdlIGhhdmUgdG8gbG9vcCBkaWZmZXJlbnRseSB0byBpbmNyZW1lbnQgY2hhbm5lbHNcbiAgICAgICAgICAgIC8vIFRaQ1lYXG4gICAgICAgICAgICBzdGFydGluZGV4ID0gY2hhbm5lbEluZGV4O1xuICAgICAgICAgICAgaW5jcmVtZW50eiA9IHNpemVjO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGh1Z2UgYXNzdW1wdGlvbjogcGxhbmVzIGFyZSBpbiBhIHBhcnRpY3VsYXIgb3JkZXIgcmVsYXRpdmUgdG8geiBhbmQgY1xuXG4gICAgICAgICAgLy8gZ2V0IGZpcnN0IHBsYW5lLCB0byBnZXQgc29tZSBkZXRhaWxzIGFib3V0IHRoZSBpbWFnZVxuICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTtcbiAgICAgICAgICByZXR1cm4gdGlmZi5nZXRJbWFnZShzdGFydGluZGV4KTtcbiAgICAgICAgY2FzZSAxNTpcbiAgICAgICAgICBpbWFnZSA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgLy8gb24gZmlyc3QgaW1hZ2UsIHNldCB1cCBzb21lIHN0dWZmOlxuICAgICAgICAgIHNhbXBsZUZvcm1hdCA9IGltYWdlLmdldFNhbXBsZUZvcm1hdCgpO1xuICAgICAgICAgIGJ5dGVzUGVyUGl4ZWwgPSBpbWFnZS5nZXRCeXRlc1BlclBpeGVsKCk7IC8vIGFsbG9jYXRlIGEgYnVmZmVyIGZvciBvbmUgY2hhbm5lbFxuICAgICAgICAgIGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih0aWxlc2l6ZXggKiB0aWxlc2l6ZXkgKiBzaXpleiAqIGJ5dGVzUGVyUGl4ZWwpO1xuICAgICAgICAgIHU4ID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKTtcbiAgICAgICAgICBpbWFnZUluZGV4ID0gc3RhcnRpbmRleCwgenNsaWNlID0gMDtcbiAgICAgICAgY2FzZSAyMTpcbiAgICAgICAgICBpZiAoISh6c2xpY2UgPCBzaXpleikpIHtcbiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjQ7XG4gICAgICAgICAgcmV0dXJuIHRpZmYuZ2V0SW1hZ2UoaW1hZ2VJbmRleCk7XG4gICAgICAgIGNhc2UgMjQ6XG4gICAgICAgICAgX2ltYWdlID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjc7XG4gICAgICAgICAgcmV0dXJuIF9pbWFnZS5yZWFkUmFzdGVycyh7XG4gICAgICAgICAgICB3aWR0aDogdGlsZXNpemV4LFxuICAgICAgICAgICAgaGVpZ2h0OiB0aWxlc2l6ZXlcbiAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgIGFycmF5cmVzdWx0ID0gQXJyYXkuaXNBcnJheShyZXN1bHQpID8gcmVzdWx0WzBdIDogcmVzdWx0OyAvLyBkZXBvc2l0IGluIGZ1bGwgY2hhbm5lbCBhcnJheSBpbiB0aGUgcmlnaHQgcGxhY2VcbiAgICAgICAgICBvZmZzZXQgPSB6c2xpY2UgKiB0aWxlc2l6ZXggKiB0aWxlc2l6ZXk7XG4gICAgICAgICAgaWYgKGFycmF5cmVzdWx0LkJZVEVTX1BFUl9FTEVNRU5UID4gNCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJieXRlIHNpemUgbm90IHN1cHBvcnRlZCB5ZXRcIik7XG4gICAgICAgICAgfSBlbHNlIGlmIChhcnJheXJlc3VsdC5CWVRFU19QRVJfRUxFTUVOVCAhPT0gYnl0ZXNQZXJTYW1wbGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGlmZiBieXRlcyBwZXIgZWxlbWVudCBtaXNtYXRjaCB3aXRoIE9NRSBtZXRhZGF0YVwiKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdTguc2V0KG5ldyBVaW50OEFycmF5KGFycmF5cmVzdWx0LmJ1ZmZlciksIG9mZnNldCAqIGFycmF5cmVzdWx0LkJZVEVTX1BFUl9FTEVNRU5UKTtcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgMzE6XG4gICAgICAgICAgaW1hZ2VJbmRleCArPSBpbmNyZW1lbnR6LCArK3pzbGljZTtcbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgLy8gYWxsIHNsaWNlcyBjb2xsZWN0ZWQsIG5vdyByZXNhbXBsZSB0byA4IGJpdHMgZnVsbCBkYXRhIHJhbmdlXG4gICAgICAgICAgc3JjID0gY2FzdFRvQXJyYXkoYnVmZmVyLCBieXRlc1BlclBpeGVsLCBzYW1wbGVGb3JtYXQpO1xuICAgICAgICAgIGNobWluID0gc3JjWzBdO1xuICAgICAgICAgIGNobWF4ID0gc3JjWzBdO1xuICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBzcmMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgIHZhbCA9IHNyY1tqXTtcbiAgICAgICAgICAgIGlmICh2YWwgPCBjaG1pbikge1xuICAgICAgICAgICAgICBjaG1pbiA9IHZhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWwgPiBjaG1heCkge1xuICAgICAgICAgICAgICBjaG1heCA9IHZhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0ID0gbmV3IFVpbnQ4QXJyYXkoc3JjLmxlbmd0aCk7XG4gICAgICAgICAgZm9yIChfaiA9IDA7IF9qIDwgc3JjLmxlbmd0aDsgKytfaikge1xuICAgICAgICAgICAgb3V0W19qXSA9IChzcmNbX2pdIC0gY2htaW4pIC8gKGNobWF4IC0gY2htaW4pICogMjU1O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXN1bHRzID0ge1xuICAgICAgICAgICAgZGF0YTogb3V0LFxuICAgICAgICAgICAgY2hhbm5lbDogY2hhbm5lbEluZGV4LFxuICAgICAgICAgICAgcmFuZ2U6IFtjaG1pbiwgY2htYXhdXG4gICAgICAgICAgfTtcbiAgICAgICAgICBzZWxmLnBvc3RNZXNzYWdlKHJlc3VsdHMsIFtyZXN1bHRzLmRhdGEuYnVmZmVyXSk7XG4gICAgICAgIGNhc2UgNDI6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgfVxuICAgIH0sIF9jYWxsZWUpO1xuICB9KSk7XG4gIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_babel_runtime_helpers_es-31f4f7"], () => (__webpack_require__("./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".image-viewer-ui.bundle.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"node_modules_aics_volume-viewer_es_workers_FetchTiffWorker_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk_aics_web_3d_viewer"] = self["webpackChunk_aics_web_3d_viewer"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return __webpack_require__.e("vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_babel_runtime_helpers_es-31f4f7").then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ })()
;