/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "?cdec":
/*!**********************!*\
  !*** http (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?753a":
/*!***********************!*\
  !*** https (ignored) ***!
  \***********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?4e4d":
/*!*********************!*\
  !*** url (ignored) ***!
  \*********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?662e":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var geotiff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! geotiff */ \"./node_modules/geotiff/dist-module/geotiff.js\");\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! serialize-error */ \"./node_modules/serialize-error/index.js\");\n/* harmony import */ var _loaders_VolumeLoadError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loaders/VolumeLoadError.js */ \"./node_modules/@aics/volume-viewer/es/loaders/VolumeLoadError.js\");\n\n\n\n// from TIFF\nconst SAMPLEFORMAT_UINT = 1;\nconst SAMPLEFORMAT_INT = 2;\nconst SAMPLEFORMAT_IEEEFP = 3;\nfunction castToArray(buf, bytesPerPixel, sampleFormat) {\n  if (sampleFormat === SAMPLEFORMAT_IEEEFP) {\n    if (bytesPerPixel === 4) {\n      return new Float32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_INT) {\n    if (bytesPerPixel === 1) {\n      return new Int8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Int16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Int32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_UINT) {\n    if (bytesPerPixel === 1) {\n      return new Uint8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Uint16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Uint32Array(buf);\n    }\n  }\n  console.error(`TIFF Worker: unsupported sample format ${sampleFormat} and bytes per pixel ${bytesPerPixel}`);\n  return new Uint8Array(buf);\n}\nasync function loadTiffChannel(e) {\n  // TODO index images by time\n  // const time = e.data.time;\n\n  const channelIndex = e.data.channel;\n  const tilesizex = e.data.tilesizex;\n  const tilesizey = e.data.tilesizey;\n  const sizez = e.data.sizez;\n  const sizec = e.data.sizec;\n  const dimensionOrder = e.data.dimensionOrder;\n  const bytesPerSample = e.data.bytesPerSample;\n  const tiff = await (0,geotiff__WEBPACK_IMPORTED_MODULE_1__.fromUrl)(e.data.url, {\n    allowFullFile: true\n  });\n\n  // load the images of this channel from the tiff\n  // today assume TCZYX so the slices are already in order.\n  let startindex = 0;\n  let incrementz = 1;\n  if (dimensionOrder === \"XYZCT\") {\n    // we have XYZCT which is the \"good\" case\n    // TCZYX\n    startindex = sizez * channelIndex;\n    incrementz = 1;\n  } else if (dimensionOrder === \"XYCZT\") {\n    // we have to loop differently to increment channels\n    // TZCYX\n    startindex = channelIndex;\n    incrementz = sizec;\n  }\n\n  // huge assumption: planes are in a particular order relative to z and c\n\n  // get first plane, to get some details about the image\n  const image = await tiff.getImage(startindex);\n  // on first image, set up some stuff:\n  const sampleFormat = image.getSampleFormat();\n  const bytesPerPixel = image.getBytesPerPixel();\n  // allocate a buffer for one channel\n  const buffer = new ArrayBuffer(tilesizex * tilesizey * sizez * bytesPerPixel);\n  const u8 = new Uint8Array(buffer);\n  for (let imageIndex = startindex, zslice = 0; zslice < sizez; imageIndex += incrementz, ++zslice) {\n    const image = await tiff.getImage(imageIndex);\n    // download and downsample on client\n    const result = await image.readRasters({\n      width: tilesizex,\n      height: tilesizey\n    });\n    const arrayresult = Array.isArray(result) ? result[0] : result;\n    // deposit in full channel array in the right place\n    const offset = zslice * tilesizex * tilesizey;\n    if (arrayresult.BYTES_PER_ELEMENT > 4) {\n      throw new _loaders_VolumeLoadError_js__WEBPACK_IMPORTED_MODULE_0__.VolumeLoadError(\"byte size not supported yet: \" + arrayresult.BYTES_PER_ELEMENT, {\n        type: _loaders_VolumeLoadError_js__WEBPACK_IMPORTED_MODULE_0__.VolumeLoadErrorType.INVALID_METADATA\n      });\n    } else if (arrayresult.BYTES_PER_ELEMENT !== bytesPerSample) {\n      throw new _loaders_VolumeLoadError_js__WEBPACK_IMPORTED_MODULE_0__.VolumeLoadError(\"tiff bytes per element mismatch with OME metadata\", {\n        type: _loaders_VolumeLoadError_js__WEBPACK_IMPORTED_MODULE_0__.VolumeLoadErrorType.INVALID_METADATA\n      });\n    } else {\n      u8.set(new Uint8Array(arrayresult.buffer), offset * arrayresult.BYTES_PER_ELEMENT);\n    }\n  }\n  // all slices collected, now resample to 8 bits full data range\n  const src = castToArray(buffer, bytesPerPixel, sampleFormat);\n  let chmin = src[0];\n  let chmax = src[0];\n  for (let j = 0; j < src.length; ++j) {\n    const val = src[j];\n    if (val < chmin) {\n      chmin = val;\n    }\n    if (val > chmax) {\n      chmax = val;\n    }\n  }\n  const out = new Uint8Array(src.length);\n  for (let j = 0; j < src.length; ++j) {\n    out[j] = (src[j] - chmin) / (chmax - chmin) * 255;\n  }\n  return {\n    data: out,\n    channel: channelIndex,\n    range: [chmin, chmax],\n    isError: false\n  };\n}\nself.onmessage = async e => {\n  try {\n    const result = await loadTiffChannel(e);\n    self.postMessage(result, [result.data.buffer]);\n  } catch (err) {\n    self.postMessage({\n      isError: true,\n      error: (0,serialize_error__WEBPACK_IMPORTED_MODULE_2__.serializeError)(err)\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFpY3Mvdm9sdW1lLXZpZXdlci9lcy93b3JrZXJzL0ZldGNoVGlmZldvcmtlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWtDO0FBQ2U7QUFDb0M7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxjQUFjLHNCQUFzQixjQUFjO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0RBQU87QUFDNUI7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZ0JBQWdCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0VBQWU7QUFDL0IsY0FBYyw0RUFBbUI7QUFDakMsT0FBTztBQUNQLE1BQU07QUFDTixnQkFBZ0Isd0VBQWU7QUFDL0IsY0FBYyw0RUFBbUI7QUFDakMsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsYUFBYSwrREFBYztBQUMzQixLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BhaWNzL3dlYi0zZC12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGFpY3Mvdm9sdW1lLXZpZXdlci9lcy93b3JrZXJzL0ZldGNoVGlmZldvcmtlci5qcz8zN2I2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21VcmwgfSBmcm9tIFwiZ2VvdGlmZlwiO1xuaW1wb3J0IHsgc2VyaWFsaXplRXJyb3IgfSBmcm9tIFwic2VyaWFsaXplLWVycm9yXCI7XG5pbXBvcnQgeyBWb2x1bWVMb2FkRXJyb3IsIFZvbHVtZUxvYWRFcnJvclR5cGUgfSBmcm9tIFwiLi4vbG9hZGVycy9Wb2x1bWVMb2FkRXJyb3IuanNcIjtcbi8vIGZyb20gVElGRlxuY29uc3QgU0FNUExFRk9STUFUX1VJTlQgPSAxO1xuY29uc3QgU0FNUExFRk9STUFUX0lOVCA9IDI7XG5jb25zdCBTQU1QTEVGT1JNQVRfSUVFRUZQID0gMztcbmZ1bmN0aW9uIGNhc3RUb0FycmF5KGJ1ZiwgYnl0ZXNQZXJQaXhlbCwgc2FtcGxlRm9ybWF0KSB7XG4gIGlmIChzYW1wbGVGb3JtYXQgPT09IFNBTVBMRUZPUk1BVF9JRUVFRlApIHtcbiAgICBpZiAoYnl0ZXNQZXJQaXhlbCA9PT0gNCkge1xuICAgICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoYnVmKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoc2FtcGxlRm9ybWF0ID09PSBTQU1QTEVGT1JNQVRfSU5UKSB7XG4gICAgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDEpIHtcbiAgICAgIHJldHVybiBuZXcgSW50OEFycmF5KGJ1Zik7XG4gICAgfSBlbHNlIGlmIChieXRlc1BlclBpeGVsID09PSAyKSB7XG4gICAgICByZXR1cm4gbmV3IEludDE2QXJyYXkoYnVmKTtcbiAgICB9IGVsc2UgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDQpIHtcbiAgICAgIHJldHVybiBuZXcgSW50MzJBcnJheShidWYpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChzYW1wbGVGb3JtYXQgPT09IFNBTVBMRUZPUk1BVF9VSU5UKSB7XG4gICAgaWYgKGJ5dGVzUGVyUGl4ZWwgPT09IDEpIHtcbiAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYpO1xuICAgIH0gZWxzZSBpZiAoYnl0ZXNQZXJQaXhlbCA9PT0gMikge1xuICAgICAgcmV0dXJuIG5ldyBVaW50MTZBcnJheShidWYpO1xuICAgIH0gZWxzZSBpZiAoYnl0ZXNQZXJQaXhlbCA9PT0gNCkge1xuICAgICAgcmV0dXJuIG5ldyBVaW50MzJBcnJheShidWYpO1xuICAgIH1cbiAgfVxuICBjb25zb2xlLmVycm9yKGBUSUZGIFdvcmtlcjogdW5zdXBwb3J0ZWQgc2FtcGxlIGZvcm1hdCAke3NhbXBsZUZvcm1hdH0gYW5kIGJ5dGVzIHBlciBwaXhlbCAke2J5dGVzUGVyUGl4ZWx9YCk7XG4gIHJldHVybiBuZXcgVWludDhBcnJheShidWYpO1xufVxuYXN5bmMgZnVuY3Rpb24gbG9hZFRpZmZDaGFubmVsKGUpIHtcbiAgLy8gVE9ETyBpbmRleCBpbWFnZXMgYnkgdGltZVxuICAvLyBjb25zdCB0aW1lID0gZS5kYXRhLnRpbWU7XG5cbiAgY29uc3QgY2hhbm5lbEluZGV4ID0gZS5kYXRhLmNoYW5uZWw7XG4gIGNvbnN0IHRpbGVzaXpleCA9IGUuZGF0YS50aWxlc2l6ZXg7XG4gIGNvbnN0IHRpbGVzaXpleSA9IGUuZGF0YS50aWxlc2l6ZXk7XG4gIGNvbnN0IHNpemV6ID0gZS5kYXRhLnNpemV6O1xuICBjb25zdCBzaXplYyA9IGUuZGF0YS5zaXplYztcbiAgY29uc3QgZGltZW5zaW9uT3JkZXIgPSBlLmRhdGEuZGltZW5zaW9uT3JkZXI7XG4gIGNvbnN0IGJ5dGVzUGVyU2FtcGxlID0gZS5kYXRhLmJ5dGVzUGVyU2FtcGxlO1xuICBjb25zdCB0aWZmID0gYXdhaXQgZnJvbVVybChlLmRhdGEudXJsLCB7XG4gICAgYWxsb3dGdWxsRmlsZTogdHJ1ZVxuICB9KTtcblxuICAvLyBsb2FkIHRoZSBpbWFnZXMgb2YgdGhpcyBjaGFubmVsIGZyb20gdGhlIHRpZmZcbiAgLy8gdG9kYXkgYXNzdW1lIFRDWllYIHNvIHRoZSBzbGljZXMgYXJlIGFscmVhZHkgaW4gb3JkZXIuXG4gIGxldCBzdGFydGluZGV4ID0gMDtcbiAgbGV0IGluY3JlbWVudHogPSAxO1xuICBpZiAoZGltZW5zaW9uT3JkZXIgPT09IFwiWFlaQ1RcIikge1xuICAgIC8vIHdlIGhhdmUgWFlaQ1Qgd2hpY2ggaXMgdGhlIFwiZ29vZFwiIGNhc2VcbiAgICAvLyBUQ1pZWFxuICAgIHN0YXJ0aW5kZXggPSBzaXpleiAqIGNoYW5uZWxJbmRleDtcbiAgICBpbmNyZW1lbnR6ID0gMTtcbiAgfSBlbHNlIGlmIChkaW1lbnNpb25PcmRlciA9PT0gXCJYWUNaVFwiKSB7XG4gICAgLy8gd2UgaGF2ZSB0byBsb29wIGRpZmZlcmVudGx5IHRvIGluY3JlbWVudCBjaGFubmVsc1xuICAgIC8vIFRaQ1lYXG4gICAgc3RhcnRpbmRleCA9IGNoYW5uZWxJbmRleDtcbiAgICBpbmNyZW1lbnR6ID0gc2l6ZWM7XG4gIH1cblxuICAvLyBodWdlIGFzc3VtcHRpb246IHBsYW5lcyBhcmUgaW4gYSBwYXJ0aWN1bGFyIG9yZGVyIHJlbGF0aXZlIHRvIHogYW5kIGNcblxuICAvLyBnZXQgZmlyc3QgcGxhbmUsIHRvIGdldCBzb21lIGRldGFpbHMgYWJvdXQgdGhlIGltYWdlXG4gIGNvbnN0IGltYWdlID0gYXdhaXQgdGlmZi5nZXRJbWFnZShzdGFydGluZGV4KTtcbiAgLy8gb24gZmlyc3QgaW1hZ2UsIHNldCB1cCBzb21lIHN0dWZmOlxuICBjb25zdCBzYW1wbGVGb3JtYXQgPSBpbWFnZS5nZXRTYW1wbGVGb3JtYXQoKTtcbiAgY29uc3QgYnl0ZXNQZXJQaXhlbCA9IGltYWdlLmdldEJ5dGVzUGVyUGl4ZWwoKTtcbiAgLy8gYWxsb2NhdGUgYSBidWZmZXIgZm9yIG9uZSBjaGFubmVsXG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih0aWxlc2l6ZXggKiB0aWxlc2l6ZXkgKiBzaXpleiAqIGJ5dGVzUGVyUGl4ZWwpO1xuICBjb25zdCB1OCA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gIGZvciAobGV0IGltYWdlSW5kZXggPSBzdGFydGluZGV4LCB6c2xpY2UgPSAwOyB6c2xpY2UgPCBzaXplejsgaW1hZ2VJbmRleCArPSBpbmNyZW1lbnR6LCArK3pzbGljZSkge1xuICAgIGNvbnN0IGltYWdlID0gYXdhaXQgdGlmZi5nZXRJbWFnZShpbWFnZUluZGV4KTtcbiAgICAvLyBkb3dubG9hZCBhbmQgZG93bnNhbXBsZSBvbiBjbGllbnRcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBpbWFnZS5yZWFkUmFzdGVycyh7XG4gICAgICB3aWR0aDogdGlsZXNpemV4LFxuICAgICAgaGVpZ2h0OiB0aWxlc2l6ZXlcbiAgICB9KTtcbiAgICBjb25zdCBhcnJheXJlc3VsdCA9IEFycmF5LmlzQXJyYXkocmVzdWx0KSA/IHJlc3VsdFswXSA6IHJlc3VsdDtcbiAgICAvLyBkZXBvc2l0IGluIGZ1bGwgY2hhbm5lbCBhcnJheSBpbiB0aGUgcmlnaHQgcGxhY2VcbiAgICBjb25zdCBvZmZzZXQgPSB6c2xpY2UgKiB0aWxlc2l6ZXggKiB0aWxlc2l6ZXk7XG4gICAgaWYgKGFycmF5cmVzdWx0LkJZVEVTX1BFUl9FTEVNRU5UID4gNCkge1xuICAgICAgdGhyb3cgbmV3IFZvbHVtZUxvYWRFcnJvcihcImJ5dGUgc2l6ZSBub3Qgc3VwcG9ydGVkIHlldDogXCIgKyBhcnJheXJlc3VsdC5CWVRFU19QRVJfRUxFTUVOVCwge1xuICAgICAgICB0eXBlOiBWb2x1bWVMb2FkRXJyb3JUeXBlLklOVkFMSURfTUVUQURBVEFcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoYXJyYXlyZXN1bHQuQllURVNfUEVSX0VMRU1FTlQgIT09IGJ5dGVzUGVyU2FtcGxlKSB7XG4gICAgICB0aHJvdyBuZXcgVm9sdW1lTG9hZEVycm9yKFwidGlmZiBieXRlcyBwZXIgZWxlbWVudCBtaXNtYXRjaCB3aXRoIE9NRSBtZXRhZGF0YVwiLCB7XG4gICAgICAgIHR5cGU6IFZvbHVtZUxvYWRFcnJvclR5cGUuSU5WQUxJRF9NRVRBREFUQVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHU4LnNldChuZXcgVWludDhBcnJheShhcnJheXJlc3VsdC5idWZmZXIpLCBvZmZzZXQgKiBhcnJheXJlc3VsdC5CWVRFU19QRVJfRUxFTUVOVCk7XG4gICAgfVxuICB9XG4gIC8vIGFsbCBzbGljZXMgY29sbGVjdGVkLCBub3cgcmVzYW1wbGUgdG8gOCBiaXRzIGZ1bGwgZGF0YSByYW5nZVxuICBjb25zdCBzcmMgPSBjYXN0VG9BcnJheShidWZmZXIsIGJ5dGVzUGVyUGl4ZWwsIHNhbXBsZUZvcm1hdCk7XG4gIGxldCBjaG1pbiA9IHNyY1swXTtcbiAgbGV0IGNobWF4ID0gc3JjWzBdO1xuICBmb3IgKGxldCBqID0gMDsgaiA8IHNyYy5sZW5ndGg7ICsraikge1xuICAgIGNvbnN0IHZhbCA9IHNyY1tqXTtcbiAgICBpZiAodmFsIDwgY2htaW4pIHtcbiAgICAgIGNobWluID0gdmFsO1xuICAgIH1cbiAgICBpZiAodmFsID4gY2htYXgpIHtcbiAgICAgIGNobWF4ID0gdmFsO1xuICAgIH1cbiAgfVxuICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShzcmMubGVuZ3RoKTtcbiAgZm9yIChsZXQgaiA9IDA7IGogPCBzcmMubGVuZ3RoOyArK2opIHtcbiAgICBvdXRbal0gPSAoc3JjW2pdIC0gY2htaW4pIC8gKGNobWF4IC0gY2htaW4pICogMjU1O1xuICB9XG4gIHJldHVybiB7XG4gICAgZGF0YTogb3V0LFxuICAgIGNoYW5uZWw6IGNoYW5uZWxJbmRleCxcbiAgICByYW5nZTogW2NobWluLCBjaG1heF0sXG4gICAgaXNFcnJvcjogZmFsc2VcbiAgfTtcbn1cbnNlbGYub25tZXNzYWdlID0gYXN5bmMgZSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbG9hZFRpZmZDaGFubmVsKGUpO1xuICAgIHNlbGYucG9zdE1lc3NhZ2UocmVzdWx0LCBbcmVzdWx0LmRhdGEuYnVmZmVyXSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgaXNFcnJvcjogdHJ1ZSxcbiAgICAgIGVycm9yOiBzZXJpYWxpemVFcnJvcihlcnIpXG4gICAgfSk7XG4gIH1cbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_aics_volume-viewer_es_loaders_VolumeLoadError_js-node_modules_geotiff_di-b2ca68"], () => (__webpack_require__("./node_modules/@aics/volume-viewer/es/workers/FetchTiffWorker.js")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".bundle.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/website-3d-cell-viewer-release/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"node_modules_aics_volume-viewer_es_workers_FetchTiffWorker_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk_aics_web_3d_viewer"] = self["webpackChunk_aics_web_3d_viewer"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return __webpack_require__.e("vendors-node_modules_aics_volume-viewer_es_loaders_VolumeLoadError_js-node_modules_geotiff_di-b2ca68").then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ })()
;